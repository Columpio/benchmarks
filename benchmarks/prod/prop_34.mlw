(* Source: Productive use of failure *)
module A
  use HighOrd
  type nat = Z | S nat
  function plus (ds : nat) (y : nat) : nat =
    match ds with
    | Z -> y
    | S x -> S (plus x y)
    end
  function mult (ds2 : nat) (ds1 : nat) : nat =
    match ds2 with
    | Z -> Z
    | S x2 -> plus ds1 (mult x2 ds1)
    end
  function mult2 (ds3 : nat) (ds12 : nat) (acc : nat) : nat =
    match ds3 with
    | Z -> acc
    | S x3 -> mult2 x3 ds12 (plus ds12 acc)
    end
  function zero : nat = Z
  goal prop_T34 :
    forall x4 : nat, y2 : nat . mult x4 y2 = mult2 x4 y2 zero
end
