module A
  use HighOrd
  type nat = Z | S nat
  function plus (ds : nat) (y : nat) : nat =
    match ds with
    | Z -> y
    | S x -> S (plus x y)
    end
  function double (ds2 : nat) : nat =
    match ds2 with
    | Z -> Z
    | S x2 -> S (S (double x2))
    end
  goal prop_T01 : forall x3 : nat . double x3 = plus x3 x3
end
