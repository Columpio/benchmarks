(* Regular expressions *)
module A
  use HighOrd
  type a = X | Y
  type r = Nil | Eps | Atom a | Plus r r | Seq r r | Star r
  type list 'a2 = Nil2 | Cons 'a2 (list 'a2)
  function and2 (ds : bool) (x : bool) : bool =
    match ds with
    | False -> False
    | True -> x
    end
  function or2 (ds2 : bool) (ds1 : bool) : bool =
    match ds2 with
    | False -> ds1
    | True -> True
    end
  function eps (ds3 : r) : bool =
    match ds3 with
    | Nil -> False
    | Eps -> True
    | Atom d -> False
    | Plus p q -> or2 (eps p) (eps q)
    | Seq p2 q2 -> and2 (eps p2) (eps q2)
    | Star ds4 -> True
    end
  function epsR (p3 : r) : r =
    match eps p3 with
    | False -> Nil
    | True -> Eps
    end
  function eqA (ds5 : a) (ds6 : a) : bool =
    match ds5 with
    | X -> False
    | Y ->
        match ds6 with
        | X -> False
        | Y -> True
        end
    end
  function eqList (ds7 : list a) (ds8 : list a) : bool =
    match ds7 with
    | Nil2 ->
        match ds8 with
        | Nil2 -> True
        | Cons d2 d3 -> False
        end
    | Cons x2 xs ->
        match ds8 with
        | Nil2 -> False
        | Cons y ys -> and2 (eqA x2 y) (eqList xs ys)
        end
    end
  function plus (ds9 : r) (q3 : r) : r =
    match ds9 with
    | Nil -> q3
    | Eps ->
        match q3 with
        | Nil -> Eps
        | Eps -> Plus Eps Eps
        | Atom d4 -> Plus Eps q3
        | Plus d5 d6 -> Plus Eps q3
        | Seq d7 d8 -> Plus Eps q3
        | Star d9 -> Plus Eps q3
        end
    | Atom d10 ->
        match q3 with
        | Nil -> ds9
        | Eps -> Plus ds9 Eps
        | Atom d11 -> Plus ds9 q3
        | Plus d12 d13 -> Plus ds9 q3
        | Seq d14 d15 -> Plus ds9 q3
        | Star d16 -> Plus ds9 q3
        end
    | Plus d17 d18 ->
        match q3 with
        | Nil -> ds9
        | Eps -> Plus ds9 Eps
        | Atom d19 -> Plus ds9 q3
        | Plus d20 d21 -> Plus ds9 q3
        | Seq d22 d23 -> Plus ds9 q3
        | Star d24 -> Plus ds9 q3
        end
    | Seq d25 d26 ->
        match q3 with
        | Nil -> ds9
        | Eps -> Plus ds9 Eps
        | Atom d27 -> Plus ds9 q3
        | Plus d28 d29 -> Plus ds9 q3
        | Seq d30 d31 -> Plus ds9 q3
        | Star d32 -> Plus ds9 q3
        end
    | Star d33 ->
        match q3 with
        | Nil -> ds9
        | Eps -> Plus ds9 Eps
        | Atom d34 -> Plus ds9 q3
        | Plus d35 d36 -> Plus ds9 q3
        | Seq d37 d38 -> Plus ds9 q3
        | Star d39 -> Plus ds9 q3
        end
    end
  function seq (ds10 : r) (q4 : r) : r =
    match ds10 with
    | Nil -> Nil
    | Eps ->
        match q4 with
        | Nil -> Nil
        | Eps -> Eps
        | Atom d40 -> Atom d40
        | Plus d41 d42 -> Plus d41 d42
        | Seq d43 d44 -> Seq d43 d44
        | Star d45 -> Star d45
        end
    | Atom d46 ->
        match q4 with
        | Nil -> Nil
        | Eps -> ds10
        | Atom d47 -> Seq ds10 q4
        | Plus d48 d49 -> Seq ds10 q4
        | Seq d50 d51 -> Seq ds10 q4
        | Star d52 -> Seq ds10 q4
        end
    | Plus d53 d54 ->
        match q4 with
        | Nil -> Nil
        | Eps -> ds10
        | Atom d55 -> Seq ds10 q4
        | Plus d56 d57 -> Seq ds10 q4
        | Seq d58 d59 -> Seq ds10 q4
        | Star d60 -> Seq ds10 q4
        end
    | Seq d61 d62 ->
        match q4 with
        | Nil -> Nil
        | Eps -> ds10
        | Atom d63 -> Seq ds10 q4
        | Plus d64 d65 -> Seq ds10 q4
        | Seq d66 d67 -> Seq ds10 q4
        | Star d68 -> Seq ds10 q4
        end
    | Star d69 ->
        match q4 with
        | Nil -> Nil
        | Eps -> ds10
        | Atom d70 -> Seq ds10 q4
        | Plus d71 d72 -> Seq ds10 q4
        | Seq d73 d74 -> Seq ds10 q4
        | Star d75 -> Seq ds10 q4
        end
    end
  function step (ds11 : r) (x3 : a) : r =
    match ds11 with
    | Nil -> Nil
    | Eps -> Nil
    | Atom a3 ->
        match eqA a3 x3 with
        | False -> Nil
        | True -> Eps
        end
    | Plus p4 q5 -> plus (step p4 x3) (step q5 x3)
    | Seq p5 q6 ->
        plus (seq (step p5 x3) q6) (seq (epsR p5) (step q6 x3))
    | Star p6 -> seq (step p6 x3) ds11
    end
  function recognise (p7 : r) (ds12 : list a) : bool =
    match ds12 with
    | Nil2 -> eps p7
    | Cons x4 xs2 -> recognise (step p7 x4) xs2
    end
  goal prop_RecAtom :
    forall a4 : a, s : list a .
      recognise (Atom a4) s = eqList s (Cons a4 Nil2)
end
