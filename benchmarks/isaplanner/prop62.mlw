module A
  use HighOrd
  type nat = Z | S nat
  type list 'a = Nil | Cons 'a (list 'a)
  function last (ds : list nat) : nat =
    match ds with
    | Nil -> Z
    | Cons x ds1 ->
        match ds1 with
        | Nil -> x
        | Cons ipv ipv1 -> last ds1
        end
    end
  function not2 (ds2 : bool) : bool =
    match ds2 with
    | False -> True
    | True -> False
    end
  function null (ds3 : list 'a2) : bool =
    match ds3 with
    | Nil -> True
    | Cons ipv2 ipv12 -> False
    end
  goal prop_62 :
    forall xs : list nat, x2 : nat .
      not2 (null xs) = True -> last (Cons x2 xs) = last xs
end
