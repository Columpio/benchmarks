(* Source: IsaPlanner test suite *)
module A
  use HighOrd
  type nat = Z | S nat
  type list 'a = Nil | Cons 'a (list 'a)
  function minus (ds : nat) (ds1 : nat) : nat =
    match ds with
    | Z -> Z
    | S ipv ->
        match ds1 with
        | Z -> ds
        | S ipv1 -> minus ipv ipv1
        end
    end
  function drop (ds2 : nat) (xs : list 'a2) : list 'a2 =
    match ds2 with
    | Z -> xs
    | S ipv2 ->
        match xs with
        | Nil -> (Nil : list 'a2)
        | Cons ipv12 ipv22 -> drop ipv2 ipv22
        end
    end
  function len (ds3 : list 'a4) : nat =
    match ds3 with
    | Nil -> Z
    | Cons ds12 xs2 -> S (len xs2)
    end
  goal prop_19 :
    forall n : nat, xs3 : list 'a6 .
      len (drop n xs3) = minus (len xs3) n
end
