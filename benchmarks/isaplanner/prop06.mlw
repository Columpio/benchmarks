module A
  use HighOrd
  type nat = Z | S nat
  function plus (ds : nat) (y : nat) : nat =
    match ds with
    | Z -> y
    | S x -> S (plus x y)
    end
  function minus (ds2 : nat) (ds1 : nat) : nat =
    match ds2 with
    | Z -> Z
    | S ipv ->
        match ds1 with
        | Z -> ds2
        | S ipv1 -> minus ipv ipv1
        end
    end
  goal prop_06 : forall n : nat, m : nat . minus n (plus n m) = Z
end
