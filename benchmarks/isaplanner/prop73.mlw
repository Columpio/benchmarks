module A
  use HighOrd
  type list 'a = Nil | Cons 'a (list 'a)
  function append (ds : list 'a2) (ys : list 'a2) : list 'a2 =
    match ds with
    | Nil -> ys
    | Cons x xs -> Cons x (append xs ys)
    end
  function filter (ds2 : ('a4 -> bool)) (ds1 : list 'a4) : list 'a4 =
    match ds1 with
    | Nil -> Nil
    | Cons x2 xs2 ->
        match ds2 x2 with
        | False -> filter ds2 xs2
        | True -> Cons x2 (filter ds2 xs2)
        end
    end
  function rev (ds3 : list 'a6) : list 'a6 =
    match ds3 with
    | Nil -> Nil
    | Cons x3 xs3 -> append (rev xs3) (Cons x3 Nil)
    end
  goal prop_73 :
    forall p : ('a8 -> bool), xs4 : list 'a8 .
      rev (filter p xs4) = filter p (rev xs4)
end
