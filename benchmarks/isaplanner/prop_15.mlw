(* Source: IsaPlanner test suite *)
module A
  use HighOrd
  type nat = Z | S nat
  type list 'a = Nil | Cons 'a (list 'a)
  function lt (ds : nat) (ds1 : nat) : bool =
    match ds1 with
    | Z -> False
    | S ipv ->
        match ds with
        | Z -> True
        | S x -> lt x ipv
        end
    end
  function ins (n : nat) (ds2 : list nat) : list nat =
    match ds2 with
    | Nil -> Cons n Nil
    | Cons x2 xs ->
        match lt n x2 with
        | False -> Cons x2 (ins n xs)
        | True -> Cons n ds2
        end
    end
  function len (ds3 : list 'a2) : nat =
    match ds3 with
    | Nil -> Z
    | Cons ds12 xs2 -> S (len xs2)
    end
  goal prop_15 :
    forall x3 : nat, xs3 : list nat . len (ins x3 xs3) = S (len xs3)
end
