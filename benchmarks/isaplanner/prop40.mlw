module A
  use HighOrd
  type nat = Z | S nat
  type list 'a = Nil | Cons 'a (list 'a)
  function take (ds : nat) (ds1 : list 'a2) : list 'a2 =
    match ds with
    | Z -> Nil
    | S ipv ->
        match ds1 with
        | Nil -> Nil
        | Cons ipv1 ipv2 -> Cons ipv1 (take ipv ipv2)
        end
    end
  goal prop_40 : forall xs : list 'a4 . take Z xs = Nil
end
