(* Source: IsaPlanner test suite *)
module A
  use HighOrd
  type nat = Z | S nat
  type list 'a = Nil | Cons 'a (list 'a)
  function lt (ds : nat) (ds1 : nat) : bool =
    match ds1 with
    | Z -> False
    | S ipv ->
        match ds with
        | Z -> True
        | S x -> lt x ipv
        end
    end
  function drop (ds2 : nat) (xs : list 'a2) : list 'a2 =
    match ds2 with
    | Z -> xs
    | S ipv2 ->
        match xs with
        | Nil -> (Nil : list 'a2)
        | Cons ipv1 ipv22 -> drop ipv2 ipv22
        end
    end
  function last (ds3 : list nat) : nat =
    match ds3 with
    | Nil -> Z
    | Cons x2 ds12 ->
        match ds12 with
        | Nil -> x2
        | Cons ipv3 ipv12 -> last ds12
        end
    end
  function len (ds4 : list 'a4) : nat =
    match ds4 with
    | Nil -> Z
    | Cons ds13 xs2 -> S (len xs2)
    end
  goal prop_63 :
    forall n : nat, xs3 : list nat .
      lt n (len xs3) = True -> last (drop n xs3) = last xs3
end
