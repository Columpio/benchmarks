module A
  use HighOrd
  type nat = S nat | Z
  function plus (ds : nat) (y : nat) : nat =
    match ds with
    | S x -> S (plus x y)
    | Z -> y
    end
  function minus (ds2 : nat) (ds1 : nat) : nat =
    match ds2 with
    | S ipv ->
        match ds1 with
        | S ipv1 -> minus ipv ipv1
        | Z -> S ipv
        end
    | Z -> Z
    end
  goal prop_09 :
    forall i : nat, j : nat, k : nat .
      minus (minus i j) k = minus i (plus j k)
end
