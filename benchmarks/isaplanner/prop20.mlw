module A
  use HighOrd
  type nat = Z | S nat
  type list 'a = Nil | Cons 'a (list 'a)
  function le (ds : nat) (ds1 : nat) : bool =
    match ds with
    | Z -> True
    | S ipv ->
        match ds1 with
        | Z -> False
        | S ipv1 -> le ipv ipv1
        end
    end
  function insort (n : nat) (ds2 : list nat) : list nat =
    match ds2 with
    | Nil -> Cons n Nil
    | Cons x xs ->
        match le n x with
        | False -> Cons x (insort n xs)
        | True -> Cons n ds2
        end
    end
  function len (ds3 : list 'a2) : nat =
    match ds3 with
    | Nil -> Z
    | Cons ds12 xs2 -> S (len xs2)
    end
  function sort (ds4 : list nat) : list nat =
    match ds4 with
    | Nil -> Nil
    | Cons x2 xs3 -> insort x2 (sort xs3)
    end
  goal prop_20 : forall xs4 : list nat . len (sort xs4) = len xs4
end
