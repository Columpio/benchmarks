module A
  use HighOrd
  type nat = S nat | Z
  type list 'a = Nil | Cons 'a (list 'a)
  function last (ds : list nat) : nat =
    match ds with
    | Nil -> Z
    | Cons x ds1 ->
        match ds1 with
        | Nil -> x
        | Cons ipv ipv1 -> last (Cons ipv ipv1)
        end
    end
  goal prop_16 :
    forall x2 : nat, xs : list nat . xs = Nil -> last (Cons x2 xs) = x2
end
