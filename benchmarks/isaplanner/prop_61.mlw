(* Source: IsaPlanner test suite *)
module A
  use HighOrd
  type nat = Z | S nat
  type list 'a = Nil | Cons 'a (list 'a)
  function append (ds : list 'a2) (ys : list 'a2) : list 'a2 =
    match ds with
    | Nil -> ys
    | Cons x xs -> Cons x (append xs ys)
    end
  function last (ds2 : list nat) : nat =
    match ds2 with
    | Nil -> Z
    | Cons x2 ds1 ->
        match ds1 with
        | Nil -> x2
        | Cons ipv ipv1 -> last ds1
        end
    end
  function lastOfTwo (xs2 : list nat) (ds3 : list nat) : nat =
    match ds3 with
    | Nil -> last xs2
    | Cons ipv2 ipv12 -> last ds3
    end
  goal prop_61 :
    forall xs3 : list nat, ys2 : list nat .
      last (append xs3 ys2) = lastOfTwo xs3 ys2
end
