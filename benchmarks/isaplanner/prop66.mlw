module A
  use HighOrd
  type nat = Z | S nat
  type list 'a = Nil | Cons 'a (list 'a)
  function le (ds : nat) (ds1 : nat) : bool =
    match ds with
    | Z -> True
    | S ipv ->
        match ds1 with
        | Z -> False
        | S ipv1 -> le ipv ipv1
        end
    end
  function filter
    (ds2 : ('a2 -> bool)) (ds12 : list 'a2) : list 'a2 =
    match ds12 with
    | Nil -> (Nil : list 'a2)
    | Cons x xs ->
        match ds2 x with
        | False -> filter ds2 xs
        | True -> Cons x (filter ds2 xs)
        end
    end
  function len (ds3 : list 'a4) : nat =
    match ds3 with
    | Nil -> Z
    | Cons ds13 xs2 -> S (len xs2)
    end
  goal prop_66 :
    forall p : ('a6 -> bool), xs3 : list 'a6 .
      le (len (filter p xs3)) (len xs3) = True
end
