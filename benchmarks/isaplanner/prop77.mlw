module A
  use HighOrd
  type nat = S nat | Z
  type list 'a = Nil | Cons 'a (list 'a)
  function le (ds : nat) (ds1 : nat) : bool =
    match ds with
    | S ipv ->
        match ds1 with
        | S ipv1 -> le ipv ipv1
        | Z -> False
        end
    | Z -> True
    end
  function insort (n : nat) (ds2 : list nat) : list nat =
    match ds2 with
    | Nil -> Cons n Nil
    | Cons x xs ->
        match le n x with
        | False -> Cons x (insort n xs)
        | True -> Cons n (Cons x xs)
        end
    end
  function sorted (ds3 : list nat) : bool =
    match ds3 with
    | Nil -> True
    | Cons x2 ds12 ->
        match ds12 with
        | Nil -> True
        | Cons y ys ->
            match le x2 y with
            | False -> False
            | True -> sorted (Cons y ys)
            end
        end
    end
  goal prop_77 :
    forall x3 : nat, xs2 : list nat .
      sorted xs2 = True -> sorted (insort x3 xs2) = True
end
